commit 7cf87dfbf93f9839fa1e3b66a0233ac86f85a5f7
Author: Simon Marlow <smarlow@fb.com>
Date:   Thu Jul 30 07:34:43 2015 -0700

    Fix #7919 (again)
    
    Summary:
    The fix is a bit clunky, and is perhaps not the best fix, but I'm not
    sure how much work it would be to fix it the other way (see comments
    for more info).

commit d8dd3cf954a9bb77d9caa64290fcea0d1abb32ec
Author: Simon Marlow <marlowsd@gmail.com>
Date:   Fri May 24 08:30:25 2013 +0100

    Fix crash with large objects (#7919)


Adapated from the above commits to compile on ghc-6.12.3.

Index: ghc-6.12.3/rts/sm/GCUtils.c
===================================================================
--- ghc-6.12.3.orig/rts/sm/GCUtils.c
+++ ghc-6.12.3/rts/sm/GCUtils.c
@@ -139,7 +139,8 @@ push_scanned_block (bdescr *bd, step_wor
     ASSERT(bd->step == ws->step);
     ASSERT(bd->u.scan == bd->free);
 
-    if (bd->start + bd->blocks * BLOCK_SIZE_W - bd->free > WORK_UNIT_WORDS)
+    if (bd->blocks == 1 && 
+        bd->start + BLOCK_SIZE_W - bd->free > WORK_UNIT_WORDS)
     {
         // a partially full block: put it on the part_list list.
         bd->link = ws->part_list;
@@ -236,8 +237,11 @@ todo_block_full (nat size, step_workspac
         // then there would be enough room to copy the current object.
         if (bd->u.scan == bd->free)
         {
-            ASSERT(bd->free != bd->start);
-            push_scanned_block(bd, ws);
+            if (bd->free == bd->start) {
+                freeGroup(bd);
+            } else {
+                push_scanned_block(bd, ws);
+            }
         }
         // Otherwise, push this block out to the global list.
         else 
